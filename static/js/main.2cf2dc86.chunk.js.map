{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+LAeeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,kBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCWLK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMFC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCDI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,Y,MC8BAC,MA7Bf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNlB,EADM,KACEmB,EADF,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAIbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAWR,EAAUQ,QAC7B,IAEH,IAGMC,EAAiB5B,EAAO6B,QAAO,SAACC,GACpC,OAAOA,EAAMrC,KAAKsC,YAAY,GAAGC,SAASZ,EAAYW,kBAExD,OAAQ/B,EAAOiC,OAGb,sBAAKrC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAXQ,SAAC4B,GACtBb,EAAea,EAAMC,OAAOC,UAW1B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUpC,OAAQ4B,SANtB,oBAAIhC,UAAU,KAAd,sBCXWyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.2cf2dc86.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}test?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ( {searchfield, searchChange} ) => {\n  return (\n    <div className=\"pa2\">\n      <input\n      className='pa3 ba b--green bg-lightest-blue' \n      type=\"search\" \n      placeholder=\"Search Robots\" \n      onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n        {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { useState, useEffect } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"./App.css\";\n\nfunction App() {\n  const [robots, setRobots] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {setRobots(users)});\n  }, []);\n\n  const onSearchChange = (event) => {\n    setSearchField(event.target.value);\n  };\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase(0).includes(searchField.toLowerCase());\n  });\n  return !robots.length ? (\n    <h1 className=\"tc\">Loading</h1>\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"f1\">RoboFriends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './containers/App';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n<App />,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}